template <typename T>
class stack {
private:
    T val[200];
    T frnt;
public:

    struct iterator
    {
        using value_type = T;
        using pointer = T; 
        using reference = T&;



        iterator(pointer ptr) : m_ptr(ptr) {}

        pointer operator->() { return m_ptr; }
        reference operator*() {return m_ptr; }

    private:

        pointer m_ptr;
        

    };

    iterator begin() { return iterator(val[0]); }

    stack() {

    }

    void push(T a){
      
    }

    void pop(){
        
    }

    T &top() {   
      return frnt;
    }

private:


};