template <typename T, int S>
class array {
private:
    T val[200];
    T frnt;
    T bck;
public:

    struct iterator
    {
        using value_type = T;
        using pointer = T; 
        using reference = T&;



        iterator(pointer ptr) : m_ptr(ptr) {}

        pointer operator->() { return m_ptr; }
        reference operator*() {return m_ptr; }

    private:

        pointer m_ptr;
        

    };

    iterator begin() { return iterator(val[0]); }

    array() {

    }

    T &back(){
      return bck;
    }

    T &front() {   
      return frnt;
    }

    T& operator[] (int a){
        return val[a];
    }

private:


};