namespace std{
    template <typename T>
    class vector {
        private:
            T val[200];
            T frnt;
            int capacity;   // total capacity of vector
            int current;    // current number of elements in the vector
        public:

            struct const_iterator
            {
                using value_type = T;
                using pointer = T; 
                using reference = T&;

                const_iterator(pointer ptr) : m_ptr(ptr) {}

                pointer operator->() { return m_ptr; }
                reference operator*() {return m_ptr; }

                private:
                    pointer m_ptr;
            };

            // iterators
            constexpr iterator begin()
            constexpr const_iterator begin() { return const_iterator(val[0]); }
            constexpr iterator               end();
            constexpr const_iterator         end() const; 
            constexpr reverse_iterator       rbegin();
            constexpr const_reverse_iterator rbegin() const;
            constexpr reverse_iterator       rend();
            constexpr const_reverse_iterator rend() const;
        
            constexpr const_iterator         cbegin() const;
            constexpr const_iterator         cend() const;
            constexpr const_reverse_iterator crbegin() const;
            constexpr const_reverse_iterator crend() const;

            // capacity
            constexpr bool empty() const;
            size_type size() const;
            size_type max_size() const;
            size_type capacity() cost;
            void    resize(size_type sz);
            void    resize(size_type sz, constT& c);
            void    shrink_to_fit();
            
            vector() {

            }

            void push_back(T a){
            
            }

            void pop(){
                
            }

            T &front() {   
            return frnt;
            }

            T& operator[] (int a){
                return val[a];
            }

    }; // end class vector
} // end namespace std